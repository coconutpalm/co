Elm.Woot = Elm.Woot || {};
Elm.Woot.make = function (_elm) {
   "use strict";
   _elm.Woot = _elm.Woot || {};
   if (_elm.Woot.values)
   return _elm.Woot.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   $moduleName = "Woot",
   $Basics = Elm.Basics.make(_elm),
   $Constants = Elm.Constants.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Model = Elm.Model.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Set = Elm.Set.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $String = Elm.String.make(_elm);
   var canDel = F2(function (wCh,
   set) {
      return A2($Set.member,
      wCh.id,
      set);
   });
   var canIns = F2(function (wCh,
   set) {
      return A2($Set.member,
      wCh.next,
      set) && A2($Set.member,
      wCh.prev,
      set);
   });
   var canIntegrate = F2(function (wUpdate,
   dict) {
      return function () {
         switch (wUpdate.ctor)
         {case "Delete":
            return A2(canDel,
              wUpdate._0,
              dict);
            case "Insert": return A2(canIns,
              wUpdate._0,
              dict);}
         _U.badCase($moduleName,
         "between lines 115 and 117");
      }();
   });
   var grabNext = F2(function (wCh,
   wStr) {
      return function () {
         switch (wStr.ctor)
         {case "::":
            return _U.eq(wStr._0.id,
              wCh.next) ? wStr._0 : A2(grabNext,
              wCh,
              wStr._1);
            case "[]":
            return $Constants.endChar;}
         _U.badCase($moduleName,
         "between lines 94 and 96");
      }();
   });
   var grabPrev = F2(function (wCh,
   wStr) {
      return function () {
         switch (wStr.ctor)
         {case "::":
            return _U.eq(wStr._0.id,
              wCh.prev) ? wStr._0 : A2(grabNext,
              wCh,
              wStr._1);
            case "[]":
            return $Constants.startChar;}
         _U.badCase($moduleName,
         "between lines 100 and 102");
      }();
   });
   var isVisible = function (wCh) {
      return _U.eq(wCh.id,
      $Constants.startId) ? true : _U.eq(wCh.id,
      $Constants.endId) ? true : _U.cmp(wCh.vis,
      0) > 0 ? true : false;
   };
   var pos = F2(function (wStr,
   wCh) {
      return function () {
         switch (wStr.ctor)
         {case "::":
            return isVisible(wStr._0) ? _U.eq(wStr._0.id,
              wCh.id) ? 0 : 1 + A2(pos,
              wStr._1,
              wCh) : _U.eq(wStr._0.id,
              wCh.id) ? 0 : A2(pos,
              wStr._1,
              wCh);
            case "[]": return 0;}
         _U.badCase($moduleName,
         "between lines 74 and 82");
      }();
   });
   var setInvisible = F2(function (wStr,
   id) {
      return function () {
         switch (wStr.ctor)
         {case "::":
            return _U.eq(wStr._0.id,
              id) ? A2($List._op["::"],
              _U.replace([["vis",-1]],
              wStr._0),
              wStr._1) : A2($List._op["::"],
              wStr._0,
              A2(setInvisible,wStr._1,id));
            case "[]":
            return _L.fromArray([]);}
         _U.badCase($moduleName,
         "between lines 66 and 70");
      }();
   });
   var ithVisible = F2(function (wStr,
   i) {
      return _U.eq(i,
      -1) ? $Constants.startChar : function () {
         switch (wStr.ctor)
         {case "::": return _U.eq(i,
              0) && isVisible(wStr._0) ? wStr._0 : isVisible(wStr._0) ? A2(ithVisible,
              wStr._1,
              i - 1) : A2(ithVisible,
              wStr._1,
              i);
            case "[]":
            return $Constants.endChar;}
         _U.badCase($moduleName,
         "between lines 55 and 61");
      }();
   });
   var subSeqGrab = F2(function (wStr,
   end) {
      return function () {
         switch (wStr.ctor)
         {case "::":
            return _U.eq(wStr._0.id,
              end.id) ? _L.fromArray([]) : A2($List._op["::"],
              wStr._0,
              A2(subSeqGrab,wStr._1,end));
            case "[]":
            return _L.fromArray([]);}
         _U.badCase($moduleName,
         "between lines 45 and 49");
      }();
   });
   var subSeq = F3(function (wStr,
   start,
   end) {
      return function () {
         switch (wStr.ctor)
         {case "::":
            return _U.eq(wStr._0.id,
              start.id) ? A2(subSeqGrab,
              wStr._1,
              end) : A3(subSeq,
              wStr._1,
              start,
              end);
            case "[]":
            return _L.fromArray([]);}
         _U.badCase($moduleName,
         "between lines 36 and 40");
      }();
   });
   var wToString = function (wStr) {
      return function () {
         switch (wStr.ctor)
         {case "::":
            return _U.cmp(wStr._0.vis,
              0) > 0 ? A2($String.cons,
              wStr._0.ch,
              wToString(wStr._1)) : wToString(wStr._1);
            case "[]": return "";}
         _U.badCase($moduleName,
         "between lines 27 and 31");
      }();
   };
   var wIdOrder = F2(function (wA,
   wB) {
      return function () {
         var $ = wB.id,
         wBSite = $._0,
         wBClock = $._1;
         var $ = wA.id,
         wASite = $._0,
         wAClock = $._1;
         return _U.cmp(wASite,
         wBSite) > 0 ? $Basics.GT : _U.cmp(wASite,
         wBSite) < 0 ? $Basics.LT : _U.cmp(wAClock,
         wBClock) > 0 ? $Basics.GT : $Basics.LT;
      }();
   });
   _elm.Woot.values = {_op: _op
                      ,wIdOrder: wIdOrder
                      ,wToString: wToString
                      ,subSeq: subSeq
                      ,subSeqGrab: subSeqGrab
                      ,ithVisible: ithVisible
                      ,setInvisible: setInvisible
                      ,pos: pos
                      ,isVisible: isVisible
                      ,grabNext: grabNext
                      ,grabPrev: grabPrev
                      ,canIns: canIns
                      ,canDel: canDel
                      ,canIntegrate: canIntegrate};
   return _elm.Woot.values;
};